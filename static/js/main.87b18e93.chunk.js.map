{"version":3,"sources":["useFetch.js","Components/Navbar/Navbar.jsx","Components/Navbar/index.js","firebase.js","context/UserContex.js","context/CrudContext.js","Components/Main/CardList/Card/Card.jsx","Components/Main/CardList/Card/index.js","Components/Main/CardList/CardList.jsx","Components/Main/CardList/index.js","Components/Main/index.js","Components/Main/Main.jsx","Components/Random/Random.jsx","Components/Menu/Menu.jsx","Components/Menu/index.js","Components/BeerDetails/index.js","Components/BeerDetails/BeerDetails.jsx","Components/Favs/index.js","Components/FavCard/FavCard.jsx","Components/Favs/Favs.jsx","App.jsx","serviceWorker.js","index.js","Components/Main/CardList/Card/Card.module.scss","Components/Random/Random.module.scss","Components/BeerDetails/BeerDetails.module.scss","Components/FavCard/FavCard.module.scss","App.module.scss","Components/Navbar/Navbar.module.scss"],"names":["useFetch","url","useState","data","setData","error","setError","ispending","setIspending","useEffect","fetch","then","res","ok","Error","json","beers","map","beer","favIcon","catch","err","message","useStyles","makeStyles","field","marginTop","marginBottom","display","Navbar","classes","search","useContext","SearchContext","acid","AcidFilter","abv","abvFilter","console","log","className","styles","navGrid","searchForm","Typography","variant","color","TextField","onChange","e","setSearchText","target","value","label","fullWidth","FormControl","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","setabvCheck","checked","setAcidity","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","UserContext","createContext","UserContex","children","user","setUser","googleProvider","GoogleAuthProvider","onAuthStateChanged","Provider","signIn","signInWithRedirect","signOut","theCrudContext","CrudContext","props","toggleFavs","isNotFavourite","collection","doc","name","set","id","alert","addToFirebase","delete","removeFromFavourites","btn","width","flexGrow","cardHeader","card","backgroundColor","Card","favouriteIcon","history","useHistory","close","setClose","description","image_url","ph","tagline","ingredients","first_brewed","fav","setFav","shortenName","length","substring","shortenTagLine","key","elevation","CardHeader","action","IconButton","onClick","title","subheader","CardMedia","style","height","paddingTop","margin","backgroundSize","image","CardContent","abvPh","Button","push","type","endIcon","popupWrapper","popup","popupClose","popupContent","src","alt","yeast","theme","cards","padding","spacing","CardList","filteredSearch","filter","acidity","abvCheck","toLowerCase","includes","searchText","trim","Container","page","Grid","container","d","item","xs","md","lg","isfilled","Main","a","get","snapshot","docs","favs","b","f","Random","idRandom","getModalStyle","top","left","transform","toolbar","mixins","logo","avatar","marginLeft","alignSelf","marginRight","active","blue","button","popupIcons","justifyContent","paper","position","palette","background","border","boxShadow","shadows","refresh","cursor","TheMenu","location","useLocation","Math","round","random","setIdRandom","userContext","ShowUserName","displayName","React","modalStyle","open","setOpen","body","menu","text","icon","path","AppBar","root","Toolbar","Modal","onClose","aria-labelledby","aria-describedby","List","noWrap","ListItem","pathname","ListItemIcon","ListItemText","primary","Avatar","BeerDetails","useParams","to","secondDescription","firstBrewed","brewers_tips","flexDirection","food_pairing","Favs","favourites","setFavourites","onSnapshot","postData","forEach","likingIntro","createTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightBold","App","ThemeProvider","exact","wrapper","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.87b18e93.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst useFetch = (url) => {\n    const [data, setData] = useState('')\n    const [error, setError] = useState(null)\n    const [ispending, setIspending] = useState(true)\n\n    useEffect(() => {\n      fetch(url)\n      .then(res => {\n        if (!res.ok) {\n          throw Error('could not catch data')\n        }\n        return res.json()\n      })\n      .then((data) => {\n        const beers = data.map((beer) =>({ ...beer, favIcon: false}))\n        // console.log(beers);\n        setData(beers)\n        setIspending(false)\n        setError(null)\n      })\n      .catch(err => {\n        setIspending(false)\n        setError(err.message)\n      })\n    }, [url])\n    return {data, ispending, error}\n}\n\nexport default useFetch","import React from 'react'\nimport styles from './Navbar.module.scss'\nimport { useContext } from 'react'\nimport { SearchContext } from '../../App'\nimport { AcidFilter } from '../../App'\nimport { abvFilter } from '../../App'\n\nimport { Checkbox, Typography } from '@material-ui/core'\nimport { TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core'\nimport { FormControlLabel } from '@material-ui/core'\nimport { FormControl } from '@material-ui/core'\nimport { FormGroup } from '@material-ui/core'\nimport { CheckBox } from '@material-ui/icons'\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n    const useStyles = makeStyles({\n        field: {\n            marginTop: 20,\n            marginBottom: 20,\n            display: 'block',\n        }\n    })\n\nconst Navbar = () => {\n    const classes = useStyles()\n\n    const search = useContext(SearchContext)\n    const acid = useContext(AcidFilter)\n    const abv = useContext(abvFilter)\n    console.log(abv);\n    \n\n    const filterSearch = (e) => {\n        search.setSearchText(e.target.value)\n    }\n\n\n    return (\n        <div className={styles.navGrid}>\n            {/* <h2>Filtered</h2> */}\n            <form className={styles.searchForm}>\n            <Typography variant='h4' color='secondary'>Search & Filter</Typography>\n                {/* <div className={styles.search}> */}\n            {/* <input  onChange={filterSearch} type=\"text\"/> */}\n            <TextField \n            className={classes.field}\n            onChange={filterSearch}\n            label='Search'\n            variant='outlined'\n            color='secondary'\n            fullWidth\n            />\n                {/* </div> */}\n            <FormControl>\n                <FormLabel color='secondary' component=\"legend\">Extra Filters</FormLabel>\n                <FormGroup >\n                    <FormControlLabel \n                    label='High ABV: over 6%'\n                    control={<Checkbox onChange={(e) => abv.setabvCheck(e.target.checked)}/>}\n                    />\n                    <FormControlLabel \n                    label='Acidic: Less than 4'\n                    control={<Checkbox onChange={(e) => acid.setAcidity(e.target.checked)}/>}\n                    />\n                </FormGroup>\n            </FormControl>\n            \n            {/* <div className={styles.navWrapper}>\n\n            <div className={styles.checkbox}>\n            <label >High ABV: over 6%</label>\n            <input type=\"checkbox\"  onChange={(e) => abv.setabvCheck(e.target.checked)} />\n            </div>\n\n            <div>\n            <label >Classic Range</label>\n            <input type=\"checkbox\"  />\n            </div>\n\n            <label >Acidic: Less than 4</label>\n            <input type=\"checkbox\" onChange={(e) => acid.setAcidity(e.target.checked)} />\n            </div> */}\n\n            </form>\n        </div>\n    )\n}\n\nexport default Navbar\n","import Navbar from \"./Navbar\";\n\nexport default Navbar","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBqkyCnyFxIUPXqJiKkDZNPfnadXrFMRm8\",\n    authDomain: \"punk-api-auth.firebaseapp.com\",\n    projectId: \"punk-api-auth\",\n    storageBucket: \"punk-api-auth.appspot.com\",\n    messagingSenderId: \"202098359177\",\n    appId: \"1:202098359177:web:04274aa57ea858eabbff58\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore();\nexport const auth = firebase.auth();\n// export const provider = new firebase.auth.GoogleAuthProvider();\nexport default firebase;","import React, { createContext, useState, useEffect } from \"react\";\nimport firebase from \"./../firebase\";\n\nexport const UserContext = createContext({});\n\nconst UserContex = ({children}) => {\n    const [user, setUser] = useState('please Sign in');\n    // const app = firebase.initializeApp(firebaseConfig);\n    // const auth = app.auth();\n    // const db = app.firestore()\n\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\n\n     const signIn = () => {\n        firebase.auth().signInWithRedirect(googleProvider);\n    };\n    const signOut = () => {\n        firebase.auth().signOut().then(() => {\n            setUser(null);\n        });\n    };\n\n    const getUser = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                setUser(user);\n            } else {\n                setUser(null);\n            }\n        });\n    };\n\n    useEffect(() => {\n        getUser();\n    }, []);\n    return (\n        <UserContext.Provider value={{ user, signIn, signOut }}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserContex\n","import React, {createContext, useState} from 'react'\nimport { firestore } from '../firebase'\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport styles from '../Components/Main/CardList/Card/Card.module.scss'\nimport { UserContext } from './UserContex';\nimport { useContext } from 'react';\n\nexport const theCrudContext = createContext({})\n\nconst CrudContext = (props) => {\n\n    const userContext = useContext(UserContext);\n    const { user } = userContext;\n\n    const removeFromFavourites = (beer) => {\n        firestore.collection(\"favourites\").doc(beer.name).delete()\n        .then(() => {\n            alert(\"Beer successfully removed!\");\n        }).catch((error) => {\n            alert(\"Error removing Beer: \", error);\n        });\n    };\n\n    const addToFirebase = (beer) => {\n        firestore\n            .collection(\"favourites\")\n            .doc(beer.name)\n            .set({\n                ...beer, \n                id: beer.id\n            })\n            .then(() => {\n                alert(\"Added to Favourites!\");\n            }).catch((error) => {\n                alert(\"Error Adding to Favourites: \", error);\n});}\n\n    const toggleFavs = (beer, isNotFavourite) => {\n        // if(user) {\n        //     beer.favIcon = !beer.favIcon\n        //     !beer.favIcon ? addToFirebase(beer): removeFromFavourites(beer)\n        // } else {\n        //     alert(\"Sign in to start liking beers\")\n        // }\n        isNotFavourite ? addToFirebase(beer): removeFromFavourites(beer)\n    }\n\n    // const handleFirebase = (beer) => {\n    //     toggleFavs(beer)\n    //     setFavIcon(!favIcon)\n    // }\n\n//    const favouriteIcon = !favIcon ? <FavoriteBorderOutlinedIcon className={styles.fav}  />: <FavoriteIcon className={styles.fav} />\n    \n    return (\n        <theCrudContext.Provider value={{ toggleFavs }}>\n            {props.children}\n        </theCrudContext.Provider>\n    )\n}\n\nexport default CrudContext\n","import React from 'react'\nimport styles from './Card.module.scss'\nimport { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { Button } from '@material-ui/core'\nimport { Container } from '@material-ui/core'\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { makeStyles } from '@material-ui/core'\nimport { Card } from '@material-ui/core'\nimport { CardHeader } from '@material-ui/core'\nimport { CardContent } from '@material-ui/core'\nimport { CardMedia } from '@material-ui/core'\nimport { IconButton } from '@material-ui/core'\nimport { Typography } from '@material-ui/core'\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { firestore } from '../../../../firebase'\nimport { useContext } from 'react'\nimport { theCrudContext } from '../../../../context/CrudContext'\nimport { UserContext } from '../../../../context/UserContex'\n\nconst useStyles = makeStyles({\n    btn: {\n        display: 'block',\n        marginTop: 10,\n        width: '100%',\n        flexGrow: 2\n    },\n    cardHeader: {\n        // height: '5px'\n    },\n    card: {\n        backgroundColor: 'lightBlue',\n        width: 300\n    }\n})\n\nconst Cards = (props,) => {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const [close, setClose] = useState(false)\n    \n    const {abv, name, description, image_url, tagline, ph, ingredients, first_brewed, favIcon, id} = props.data\n    const [fav, setFav] =useState(props.data.favIcon)\n\n    const shortenName = name.length < 15 ? name : name.substring(0, 15) + \"...\";\n    const shortenTagLine = name.length < 27 ? name : name.substring(0, 27) + \"...\";\n\n    const crudContext = useContext(theCrudContext);\n    const { toggleFavs } = crudContext;\n\n    const userContext = useContext(UserContext);\n    const { user, } = userContext;\n\n    let favouriteIcon; \n    if (!fav) {\n        favouriteIcon = <FavoriteBorderOutlinedIcon className={styles.fav}  />\n        console.log(\"Outline icon for: \" + name)\n    } else {\n        favouriteIcon = <FavoriteIcon className={styles.fav} />\n        console.log(\"SOLID icon for: \" + name)\n    }\n\n    const handleFirebase = (beer) => {\n        if(user) {\n            beer.favIcon = !beer.favIcon\n            toggleFavs(beer, beer.favIcon)\n            setFav(props.data.favIcon)\n            console.log(name + \" beer favourite status is \" + props.data.favIcon)\n        } else {\n            alert(\"Sign in to start liking beers\")\n        }\n    }\n\n\n    return (\n        <div>\n        <Card className={classes.card} key={id} elevation={8}>\n            <CardHeader \n            className={styles.cardHeader}\n            action={\n            <IconButton onClick={() => (handleFirebase(props.data))}>\n            {favouriteIcon}\n            </IconButton>\n            }\n            title={shortenName}\n            subheader={shortenTagLine}\n            />\n            \n            <CardMedia\n            style = {{ height: 300, paddingTop: '56.25%', width: 'auto', margin: '0px auto', backgroundSize: 'contain'}}\n            image={image_url}\n            title=\"Paella dish\"\n            />\n            <CardContent className={styles.abv}>\n                <div className={styles.abvPh}>\n                <Typography variant='p'>\n                    ABV: {abv}\n                </Typography>\n                <Typography className={styles.ph} variant='p'>\n                    PH: {ph}\n                </Typography>\n                </div>\n                <Button onClick={() => {history.push(`/beers/${id}`)}} \n                    className={classes.btn}\n                    // variant='outlined' \n                    type='submit'\n                    color='secondary'\n                    endIcon={<InfoOutlinedIcon/>}\n                    >\n                    Click for Info!</Button>\n                \n            </CardContent>\n\n        </Card>\n            \n                    {/* <h4>{name}</h4> */}\n                    {/* <img src={image_url} alt=\"\" /> */}\n                    {/* <h5>{tagline}</h5>\n                    <p> ABV: {abv}</p>\n                    <p> PH: {ph}</p> */}\n                    {/* <button onClick={() => {setClose(true)}}>Click for Info!</button> */}\n                    {/* <Button onClick={() => {setClose(true)}} \n                    className={classes.btn}\n                    variant='contained' \n                    type='submit'\n                    color='secondary'\n                    endIcon={<InfoOutlinedIcon/>}\n                    >Click for Info!</Button> */}\n                    {/* <Link to={`/beers/${id}`}><button>id information</button></Link> */}\n                    \n\n                    { close && <div className={styles.popupWrapper}>\n                        <div className={styles.popup}>\n                                <div onClick={() => {setClose(false)}} className={styles.popupClose}>x</div>\n                                <div className={styles.popupContent}>\n                                    <img src={image_url} alt=\"\" />\n                                    <p>{description}</p>\n                                    <p>Ingredients: {ingredients.yeast}</p>\n                                    <p>first brewed: {first_brewed}</p>\n                                </div>\n                        </div>\n                    </div> }\n        \n        </div>\n    )\n}\n\nexport default Cards\n","import Card from \"./Card\";\n\nexport default Card","import React from \"react\";\nimport styles from \"./CardList.module.scss\";\nimport Card from \"./Card\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { SearchContext } from \"../../../App\";\nimport { AcidFilter } from \"../../../App\";\nimport { abvFilter } from \"../../../App\";\nimport { Grid } from \"@material-ui/core\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    cards: {\n      padding: theme.spacing(3),\n    },\n  };\n});\n\nconst CardList = ({ data }) => {\n  const classes = useStyles();\n  // const [filteredSearch, setFilteredSearch] = useState([])\n\n  const search = useContext(SearchContext);\n  const acid = useContext(AcidFilter);\n  const abv = useContext(abvFilter);\n  console.log(acid);\n\n  let filteredSearch = data.filter((beer) => {\n    if (acid.acidity) {\n      return beer.ph <= 4;\n    }\n    if (abv.abvCheck) {\n      return beer.abv > 6;\n    }\n    if (!beer.name) {\n      return false;\n    }\n    return beer.name\n      .toLowerCase()\n      .includes(search.searchText.toLowerCase().trim());\n  });\n\n  return (\n    <Container className={classes.page}>\n      <Grid container spacing={3}>\n        {filteredSearch &&\n          filteredSearch.map((d) => (\n            // if()\n            <Grid item key={d.id} xs={10} md={6} lg={4}>\n              <Card isfilled={false} data={d} />\n            </Grid>\n          ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default CardList;\n","import CardList from \"./CardList\";\n\nexport default CardList","import Main from \"./Main\";\n\nexport default Main","import React from \"react\";\nimport styles from \"./Main.module.scss\";\nimport CardList from \"./CardList\";\nimport { useState, useEffect } from \"react\";\nimport { firestore } from \"../../firebase\";\n\nconst Main = () => {\n  const [data, setData] = useState([]);\n\n  const getFavs = () => {\n    return firestore\n      .collection(\"favourites\")\n      .get()\n      .then((snapshot) => {\n        const postData = [];\n        return snapshot.docs.map((doc) => {\n          return { ...doc.data(), id: doc.id };\n        });\n      });\n  };\n\n  useEffect(() => {\n    fetch(\"https://api.punkapi.com/v2/beers\")\n      .then((res) => res.json())\n      .then(async (data) => {\n        let beers = data.map((beer) => ({ ...beer, favIcon: false }));\n        const favs = await getFavs();\n\n        beers = beers.map((b) => {\n          b.favIcon = favs.filter((f) => f.name == b.name).length > 0;\n          return b;\n        });\n\n        setData(beers);\n      });\n  }, []);\n\n  return <>{data && data.length > 0 ? <CardList data={data} /> : null}</>;\n};\n\nexport default Main;\n","import React from 'react'\nimport { useState } from 'react'\nimport useFetch from '../../useFetch'\nimport styles from './Random.module.scss'\n\nimport { Button } from '@material-ui/core'\nimport { Container } from '@material-ui/core'\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { makeStyles } from '@material-ui/core'\nimport { Card } from '@material-ui/core'\nimport { CardHeader } from '@material-ui/core'\nimport { CardContent } from '@material-ui/core'\nimport { CardMedia } from '@material-ui/core'\nimport { IconButton } from '@material-ui/core'\nimport { Typography } from '@material-ui/core'\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\n\nconst Random = ({idRandom}) => {\n\n        \n\n    const {ispending, error, data: beer} = useFetch('https://api.punkapi.com/v2/beers/' + idRandom)\n    console.log(beer, \"hello man\");\n    return (\n        <div>\n             {ispending && <div>loading....</div>}\n            {error && <div>{error}</div>}\n            \n            {beer && <Card className={styles.card} key={beer.id} elevation={8}>\n            <CardHeader \n            className={styles.cardHeader}\n             action={\n            <IconButton>\n            {/* <FavoriteBorderOutlinedIcon /> */}\n            </IconButton>\n             }\n            title={beer[0].name}\n            subheader={beer[0].tagline}\n            />\n            \n            <CardMedia\n            style = {{ height: 300, paddingTop: '56.25%', width: 'auto', margin: '0px auto', backgroundSize: 'contain'}}\n            image={beer[0].image_url}\n            title=\"Paella dish\"\n            />\n            <CardContent className={styles.abv}>\n                <Typography variant='p'>\n                    ABV: {beer[0].abv}\n                </Typography>\n                <Typography variant='p'>\n                    PH: {beer[0].ph}\n                </Typography>\n                {/* <Button onClick={() => {history.push(`/beers/${id}`)}} \n                    className={classes.btn}\n                    // variant='outlined' \n                    type='submit'\n                    color='secondary'\n                    endIcon={<InfoOutlinedIcon/>}\n                    >Click for Info!</Button> */}\n                \n            </CardContent>\n\n        </Card> }\n        </div>\n    )\n}\n\nexport default Random\n","import React, { useContext } from 'react'\nimport { AppBar, ThemeProvider } from '@material-ui/core'\nimport { Toolbar } from '@material-ui/core'\nimport { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core'\nimport { Avatar } from '@material-ui/core'\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\nimport HomeIcon from '@material-ui/icons/Home';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport useFetch from '../../useFetch'\nimport { useHistory } from 'react-router'\nimport { useLocation } from 'react-router-dom'\nimport { useState } from 'react'\nimport { blue } from '@material-ui/core/colors'\nimport { Button, Modal } from '@material-ui/core'\nimport Card from '../Main/CardList/Card'\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Random from '../Random/Random'\nimport CancelIcon from '@material-ui/icons/Cancel';\n// import { auth, provider } from '../../firebase'\nimport { UserContext } from '../../context/UserContex'\n\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 ;\n  const left = 50 ;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n    const useStyles = makeStyles((theme) => {\n        return {\n       toolbar: theme.mixins.toolbar,\n       logo: {\n            flexGrow: 1,\n       },\n       avatar: {\n            marginLeft: theme.spacing(2)\n       },\n       title: {\n            flexGrow: 1,\n            alignSelf: 'flex-end',\n            display: 'flex',\n            width: 55,\n            marginRight: 300\n        },\n        active: {\n            backgroundColor: blue[700],\n            \n        },\n        button: {\n            marginRight: 80\n        },\n        popupIcons: {\n            display: 'flex',\n            justifyContent: 'space-between'\n        },\n        paper: {\n            position: 'absolute',\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        refresh: {\n            cursor: 'pointer'\n        }\n        \n}\n    })\n\nconst TheMenu = () => {\n    const classes = useStyles({})\n    const history = useHistory()\n    const location = useLocation()\n    const [idRandom, setIdRandom] =useState(Math.round(Math.random() * 25))\n\n    //firebase Import props \n    const userContext = useContext(UserContext);\n    const { user, signIn, signOut } = userContext;\n\n    const ShowUserName = user ? user.displayName : 'guest';\n\n    const logInOption = !user ? <span > sign In </span> : <span > sign Out </span>\n\n    // modal\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n    const handleOpen = () => {\n    setOpen(true);\n    \n  };\n//   let idRandom = Math.round(Math.random() * 25);\nconsole.log(Math.round(Math.random() * 25));\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n    const body = (\n    <div style={modalStyle} className={classes.paper}>\n        <div className={classes.popupIcons}>\n        <RefreshIcon onClick={() =>{setIdRandom(Math.round(Math.random() * 25))}} className={classes.refresh}  />\n        <CancelIcon className={classes.refresh} onClick={() => {setOpen(false)}} />\n        </div>\n        \n        <Random idRandom={idRandom} />\n    </div>\n);\n\n\n    const menu = [\n        {\n            text: 'Home',\n            icon: <HomeIcon color='secondary'/>,\n            path: '/'\n        },\n        {\n            text: 'Your Favorites',\n            icon: <FavoriteBorderIcon color='secondary'/>,\n            path: '/favs'\n        },\n    ]\n\n    return (\n        <div>\n            \n            <div>\n                <AppBar className={classes.root}>\n                    <Toolbar >\n                        <Typography className={classes.logo}>\n                            DUI Brewers\n                        </Typography>\n\n                        <Button type=\"button\" onClick={handleOpen} className={classes.button} color=\"secondary\">Random Beer</Button>\n                        {/* pop up modal */}\n                            {/* <button type=\"button\" onClick={handleOpen}>\n                                Open Modal\n                            </button> */}\n                            <Modal\n                                open={open}\n                                onClose={handleClose}\n                                aria-labelledby=\"simple-modal-title\"\n                                aria-describedby=\"simple-modal-description\"\n                            >\n                                {body}\n                            </Modal>\n\n                        <List className={classes.title}  variant=\"h5\" noWrap>\n                        {menu.map(menu => (\n                            <ListItem \n                            button \n                            key={menu.text}\n                            onClick={() => {history.push(menu.path)}}\n                            className={location.pathname == menu.path ? classes.active: null}\n                            >\n                                <ListItemIcon>{menu.icon}</ListItemIcon>\n                                <ListItemText primary={menu.text} />\n                            </ListItem>\n                        ))}\n                        \n                    </List>\n\n                        <Typography>\n                            {ShowUserName}\n                        </Typography>\n                        <Avatar onClick={!user ? signIn: signOut}  className={classes.avatar}/>\n                    </Toolbar>\n                </AppBar>\n                <div className={classes.toolbar}></div>\n                <div className={classes.toolbar}></div>\n            </div>\n        </div>\n    )\n}\n\nexport default TheMenu\n","import TheMenu from \"./Menu\";\n\nexport default TheMenu","import BeerDetails from \"./BeerDetails\";\n\nexport default BeerDetails","import React from 'react'\nimport { useParams } from 'react-router'\nimport useFetch from '../../useFetch'\nimport styles from './BeerDetails.module.scss'\nimport { Link } from 'react-router-dom'\nimport { Container, Typography } from '@material-ui/core'\nimport Random from '../Random/Random'\n\n\nconst BeerDetails = () => {\n    const {id} = useParams()\n    const {ispending, error, data: beer} = useFetch('https://api.punkapi.com/v2/beers/' + id)\n    console.log(beer);\n\n\n    return (\n        <div className={styles.beer}>\n            {ispending && <div>loading....</div>}\n            {error && <div>{error}</div>}\n\n        \n            { beer && <div>\n                <h1>{beer[0].name}</h1>\n                <img src={beer[0].image_url} alt=\"\" />\n                <Link to='/'>\n                <button>Go Back</button>\n                </Link>\n            </div>} \n            {beer && <div className={styles.secondDescription}>\n                <p><span>Description: </span>  {beer[0].description}</p>\n                {/* <p>Ingredients: {beer.ingredients.yeast}</p> */}\n                <p className={styles.firstBrewed}><span>First brewed:</span> {beer[0].first_brewed}</p>\n                <p><span>Brewers Tips:</span> {beer[0].brewers_tips}</p>\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                <h4>Can be paired with:</h4>\n                {beer[0].food_pairing.map((item) => (\n                    <div>\n                    <ul>\n                        <li>{item}</li>\n                    </ul>\n                    </div>\n                ))}\n                </div>\n                </div>}\n\n        </div>\n    )\n}\n\nexport default BeerDetails\n","import Favs from \"./Favs\";\n\nexport default Favs","import React from 'react'\nimport styles from './FavCard.module.scss'\nimport { Card, CardHeader } from '@material-ui/core'\nimport { IconButton } from '@material-ui/core'\nimport { CardMedia } from '@material-ui/core'\nimport { Typography } from '@material-ui/core'\nimport { CardContent } from '@material-ui/core'\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/styles'\nimport { theCrudContext } from '../../context/CrudContext'\nimport { useContext } from 'react'\n\nconst useStyles = makeStyles({\n    btn: {\n        display: 'block',\n        marginTop: 10,\n        width: '100%',\n        flexGrow: 2\n    },\n    cardHeader: {\n        // height: '5px'\n    }\n})\n\nconst FavCard = (props) => {\n    const classes = useStyles()\n\n    const crudContext = useContext(theCrudContext);\n    const { favouriteIcon, toggleFavs } = crudContext;\n\n    // const handleFirebase = (beer) => {\n    //     toggleFavs(beer)\n    //     setFavIcon(!favIcon)\n    // }\n\n    const {abv, name, description, image_url, tagline, ph, ingredients, first_brewed, id} = props.data\n\n    // const useContext = useContext(CrudContext)\n    // const {favouriteIcon} = useContext\n    return (\n        <div>\n            <Card className={styles.card} key={id} elevation={8}>\n                <CardHeader \n                    className={styles.cardHeader}\n                    // onClick={handleFirebase}\n                    action={\n                <IconButton>\n                    {favouriteIcon}\n            </IconButton>\n             }\n                title={name}\n                subheader={tagline}\n                />\n                <CardMedia\n                    style = {{ height: 300, paddingTop: '56.25%', width: 'auto', margin: '0px auto', backgroundSize: 'contain'}}\n                    image={image_url}\n                    title=\"Paella dish\"\n                />\n                <CardContent className={styles.abv}>\n                <Typography variant='p'>\n                    ABV: {abv}\n                </Typography>\n                <Typography variant='p'>\n                    PH: {ph}\n                </Typography>\n                \n            </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nexport default FavCard\n","import { Container, Grid, Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { firestore } from \"../../firebase\";\nimport FavCard from \"../FavCard\";\nimport Card from \"../Main/CardList/Card\";\n\nconst Favs = () => {\n  const [favourites, setFavourites] = useState([]);\n\n  useEffect(() => {\n    return firestore.collection(\"favourites\").onSnapshot((snapshot) => {\n      const postData = [];\n      snapshot.forEach((doc) => postData.push({ ...doc.data(), id: doc.id }));\n      setFavourites(postData);\n    });\n  }, []);\n\n  const likingIntro = favourites.length ? (\n    favourites &&\n    favourites.map((d) => (\n      // if()\n      <Grid item key={d.id} xs={10} md={6} lg={3}>\n        {/* <Cards data={d}/> */}\n        <Card data={d} />\n      </Grid>\n    ))\n  ) : (\n    <h1>Start By Liking Some Beers!!</h1>\n  );\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        {likingIntro}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Favs;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport useFetch from \"./useFetch\";\nimport Navbar from \"./Components/Navbar\";\nimport Main from \"./Components/Main\";\nimport TheMenu from \"./Components/Menu\";\nimport BeerDetails from \"./Components/BeerDetails\";\nimport Favs from \"./Components/Favs\";\nimport styles from \"./App.module.scss\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { createContext } from \"react\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport UserContex from \"./context/UserContex\";\nimport CrudContext from \"./context/CrudContext\";\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: \"Quicksand\",\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightBold: 600,\n  },\n});\n\nexport const SearchContext = createContext({});\nexport const AcidFilter = createContext({});\nexport const abvFilter = createContext({});\nconst App = () => {\n  // const { ispending, error, data } = useFetch(\n  //   \"https://api.punkapi.com/v2/beers\"\n  // );\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [acidity, setAcidity] = useState(false);\n  const [abvCheck, setabvCheck] = useState(false);\n\n  const search = {\n    searchText: searchText,\n    setSearchText: setSearchText,\n  };\n  const acid = {\n    acidity: acidity,\n    setAcidity: setAcidity,\n  };\n  const abv = {\n    abvCheck: abvCheck,\n    setabvCheck: setabvCheck,\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <UserContex>\n        <CrudContext>\n          <SearchContext.Provider value={search}>\n            <AcidFilter.Provider value={acid}>\n              <abvFilter.Provider value={abv}>\n                <Router>\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <div>\n                        {/* {ispending && <div>loading....</div>}\n                        {error && <div>{error}</div>} */}\n                        <div>\n                          <TheMenu />\n                        </div>\n                        <div className={styles.wrapper}>\n                          <Navbar setSearchText={setSearchText} />\n                          <Main />}\n                        </div>\n                      </div>\n                    </Route>\n\n                    <Route path=\"/beers/:id\">\n                      <TheMenu />\n                      <div className={styles.wrapper}>\n                        <BeerDetails />\n                      </div>\n                    </Route>\n\n                    <Route path=\"/favs\">\n                      <TheMenu />\n                      <div className={styles.wrapper}>\n                        <Favs />\n                      </div>\n                    </Route>\n                  </Switch>\n                </Router>\n              </abvFilter.Provider>\n            </AcidFilter.Provider>\n          </SearchContext.Provider>\n        </CrudContext>\n      </UserContex>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__eWU7X\",\"abv\":\"Card_abv__1hsbb\",\"fav\":\"Card_fav__JsTC7\",\"abvPh\":\"Card_abvPh__27Jec\",\"ph\":\"Card_ph__24--D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"abv\":\"Random_abv__10RD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"beer\":\"BeerDetails_beer___jgB5\",\"types\":\"BeerDetails_types__2msaP\",\"secondDescription\":\"BeerDetails_secondDescription__16Dcf\",\"firstBrewed\":\"BeerDetails_firstBrewed__3lugd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"FavCard_card__2mEkt\",\"abv\":\"FavCard_abv__1SwFY\",\"fav\":\"FavCard_fav__Isnn6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__RCHjb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navGrid\":\"Navbar_navGrid__1HZwL\",\"searchForm\":\"Navbar_searchForm__1L7Qa\"};"],"sourceRoot":""}